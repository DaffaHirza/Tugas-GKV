#include <GL/glut.h>   

static int shoulder = 0, elbow = 0; // mengatur shoulder dan elbow ke 0 

void init(void) {   
    glClearColor(0.0, 0.0, 0.0, 0.0); //Mengatur warna latar belakang menjadi hitam.
    glShadeModel(GL_FLAT); //Menggunakan pencahayaan model flat shading.
}   

void display(void) { //tampilan dan transformasi bertanggung jawab untuk menggambar objek lengan yang terdiri dari bahu, lengan atas, siku, dan lengan bawah.
    glClear(GL_COLOR_BUFFER_BIT); //Membersihkan layar sebelum menggambar objek baru.
    glPushMatrix();   

    //  bahu dan Transformasi untuk bahu
    glTranslatef(-1.0, 0.0, 0.0);   
    glRotatef((GLfloat)shoulder, 0.0, 0.0, 1.0);            
    glTranslatef(1.0, 0.0, 0.0);    

    // Lengan atas
    glPushMatrix();   
    glScalef(2.0, 0.4, 1.0);                
    glutWireCube(1.0);   
    glPopMatrix();   

    // siku dan Transformasi untuk siku
    glTranslatef(1.0, 0.0, 0.0);   
    glRotatef((GLfloat)elbow, 0.0, 0.0, 1.0);            
    glTranslatef(1.0, 0.0, 0.0);    

    // Lengan bawah
    glPushMatrix();   
    glScalef(2.0, 0.4, 1.0);                
    glutWireCube(1.0);   
    glPopMatrix();   

    glPopMatrix(); //mengembalikan semua transformasi ke posisi awal agar tidak memengaruhi frame berikutnya.
    glutSwapBuffers(); //Digunakan untuk double buffering, memastikan animasi berjalan lancar.
}   

void reshape(int w, int h) { //fungsi ini adalah untuk menyesuaikan ukuran tampilan agar objek bisa terlihat dilayar dan mengatur persepektif 3D
    glViewport(0, 0, (GLsizei)w, (GLsizei)h);        
    glMatrixMode(GL_PROJECTION);        
    glLoadIdentity();   
    gluPerspective(65.0, (GLfloat)w/(GLfloat)h, 1.0, 20.0);        
    glMatrixMode(GL_MODELVIEW);        
    glLoadIdentity();   
    glTranslatef(0.0, 0.0, -5.0);   
}  

void keyboard(unsigned char key, int x, int y) { //mengontrol pergerakan bahu dan lengan         
    switch (key) {   
        case 's': shoulder = (shoulder + 5) % 360; glutPostRedisplay(); break;   //Memutar bahu ke depan.
        case 'S': shoulder = (shoulder - 5) % 360; glutPostRedisplay(); break;   //Memutar bahu ke belakang.
        case 'e': elbow = (elbow + 5) % 360; glutPostRedisplay(); break;   //Memutar siku ke depan.
        case 'E': elbow = (elbow - 5) % 360; glutPostRedisplay(); break;   //Memutar siku ke belakang.
        case 27: exit(0); break;   //kelaur dari program
        default: break;   
    }   
}   

int main(int argc, char** argv) {        
    glutInit(&argc, argv);   
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);        
    glutInitWindowSize(700, 600);        
    glutInitWindowPosition(100, 100);        
    glutCreateWindow("Lengan Bergerak");    
    init();   

    glutDisplayFunc(display);        
    glutReshapeFunc(reshape);        
    glutKeyboardFunc(keyboard);        
    glutMainLoop();    

    return 0;  
}
